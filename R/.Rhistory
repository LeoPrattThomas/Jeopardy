library(readxl)
library(tidyverse)
Book1 <- read_excel("Input.xlsx")
View(Book1)
Question <- Book1 %>%
pivot_longer(cols = c("Topic1","Topic2","Topic3"),
names_to = "root",
values_to = "question");View(Question)
Topic <- as_tibble(
cbind(names = names(Book1))) %>%
filter(names != "Points");View(Topic)
write.csv(Question , "TidyData/Question.csv")
write.csv(Question , "Question.csv")
write.csv(Topic, "Topic.csv")
library(tidyverse)
library(modelr)
msleep2 <- msleep
#1. Scatterplot of brainweight vs. bodyweight (show scatterplot)
ggplot(msleep2, aes(brainwt, bodywt))+
geom_point()
#2. Linear model with coefficients interpreted
sleep_mod <- lm(brainwt ~ bodywt, data = msleep2)
grid <- msleep2 %>%
data_grid(bodywt) %>%
add_predictions(sleep_mod)
ggplot(msleep2, aes(x = bodywt))+
geom_point(aes(y = brainwt))+
geom_line(aes(y = pred), data = grid, color = "green", size = 1)
#3. Residual plot of linear model (show residual plot)
msleep2 <- msleep2 %>% add_residuals(sleep_mod)
ggplot(data = msleep2, aes(bodywt, resid)) +
geom_point()
#4. Do better! Make a more predictive model using logs. Which model is best? logarithmic, exponential, power
sleep_1 <- msleep2 %>% mutate(log_length = log(bodywt),
log_weight = log(brainwt))
#plot residuals  (should not have a pattern)
ggplot(mpg, aes(hwy,resid)) +
geom_ref_line(h = 0) +
geom_point()
#LSRL - linerar only
sim1_mod <- lm(y ~ x , data = sim1)
#start wiht a grid of values
grid <- sim1 %>%  data_grid(x)
#add percddicitons
grid <- grid %>%  add_predictions(sim1_mod)
#plor perdikotoins
ggplot(sim1, aes(x)) +
geom_point(aes(y = y)) +
geom_line(aes(y = pred), data = grid, color = "red", size = 1)
#     visualizing predictions form a model. (the long way)
#add residuals to data
sim1 <- sim1 %>% add_residuals(sim1_mod)
#plot residuals  (should not have a pattern)
ggplot(sim1, aes(x,resid)) +
geom_ref_line(h = 0) +
geom_point()
#====================== make mpg data ======================
#cty vs. hwy
ggplot(mpg, aes(hwy, cty)) +
geom_point()
#LSRL - linerar only
mpg_mod <- lm(cty ~ hwy , data = mpg)
#start wiht a grid of values
grid <- mpg %>%  data_grid(hwy)
#add percddicitons
grid <- grid %>%  add_predictions(mpg_mod)
#plor perdikotoins
ggplot(mpg, aes(hwy)) +
geom_point(aes(y = cty)) +
geom_line(aes(y = pred), data = grid, color = "red", size = 1)
#add residuals to data
mpg <- mpg %>% add_residuals(mpg_mod)
#plot residuals  (should not have a pattern)
ggplot(mpg, aes(hwy,resid)) +
geom_ref_line(h = 0) +
geom_point()
#4. Do better! Make a more predictive model using logs. Which model is best? logarithmic, exponential, power
sleep_1 <- msleep2 %>% mutate(log_length = log(bodywt),
log_weight = log(brainwt))
ggplot(mpg, aes(hwy,resid)) +
geom_ref_line(h = 0) +
geom_point()
ggplot(msleep2, aes(bodywt,brainwt)) +
geom_ref_line(h = 0) +
geom_point()
exp_mod <- lm(log_weight ~ length_inches, data = sleep_1)
#4. Do better! Make a more predictive model using logs. Which model is best? logarithmic, exponential, power
sleep_1 <- msleep2 %>% mutate(log_body = log(bodywt),
log_brain = log(brainwt))
coef(exp_mod)
exp_mod <- lm(log_body ~ brainwt, data = sleep_1)
coef(exp_mod)
grid <- grid %>% add_predictions(exp_mod)
grid <- grid %>% add_predictions(exp_mod)
#4. Do better! Make a more predictive model using logs. Which model is best? logarithmic, exponential, power
sleep_1 <- msleep2 %>% mutate(log_body = log(bodywt),
log_brain = log(brainwt))
sleep_1
View(sleep_1)
exp_mod <- lm(log_body ~ brainwt, data = sleep_1)
coef(exp_mod)
grid <- grid %>% add_predictions(exp_mod)
exp_mod <- lm(log_brain ~ bodywt, data = sleep_1)
coef(exp_mod)
grid <- grid %>% add_predictions(exp_mod)
view(gator_1)
exp_mod <- lm(log_weight ~ length_inches, data = gator_1)
coef(exp_mod)
grid <- grid %>% add_predictions(exp_mod)
gator_1 <- alligator %>% mutate(log_length = log(length_inches),
log_weight = log(weight_pounds))
view(gator_1)
exp_mod <- lm(log_weight ~ length_inches, data = gator_1)
view(gator_1)
gator_1 <- alligator %>% mutate(log_length = log(length_inches),
log_weight = log(weight_pounds))
grid <- alligator %>%
data_grid(length_inches) %>%
add_predictions(a_mod)
a_mod <- lm(weight_pounds ~ length_inches, data = alligator)
grid <- alligator %>%
data_grid(length_inches) %>%
add_predictions(a_mod)
#import aligartor
alligator <- read.delim("~/My Drive/*Data Science 2022-23/Files/alligator.txt")
a_mod <- lm(weight_pounds ~ length_inches, data = alligator)
grid <- alligator %>%
data_grid(length_inches) %>%
add_predictions(a_mod)
gator_1 <- alligator %>% mutate(log_length = log(length_inches),
log_weight = log(weight_pounds))
exp_mod <- lm(log_weight ~ length_inches, data = gator_1)
grid <- grid %>% add_predictions(exp_mod)
ggplot(gator_1, aes(length_inches)) +
geom_point(aes(y = log_weight)) +
geom_line(aes(y = pred), data = grid, color = "green", size = 1)
#4. Do better! Make a more predictive model using logs. Which model is best? logarithmic, exponential, power
sleep_1 <- msleep2 %>% mutate(log_body = log(bodywt),
log_brain = log(brainwt))
View(sleep_1)
exp_mod <- lm(log_brain ~ bodywt, data = sleep_1)
coef(exp_mod)
grid <- grid %>% add_predictions(exp_mod)
ggplot(gator_1, aes(length_inches)) +
geom_point(aes(y = log_weight)) +
geom_line(aes(y = pred), data = grid, color = "green", size = 1)
#4. Do better! Make a more predictive model using logs. Which model is best? logarithmic, exponential, power
sleep_1 <- msleep2 %>% mutate(log_body = log(bodywt),
log_brain = log(brainwt))
View(sleep_1)
grid <- grid %>% add_predictions(exp_mod)
ggplot(sleep_1, aes(bodywt)) +
geom_point(aes(y = log_brain)) +
geom_line(aes(y = pred), data = grid, color = "green", size = 1)
#3. Residual plot of linear model (show residual plot)
msleep2 <- msleep2 %>% add_residuals(sleep_mod)
ggplot(data = msleep2, aes(bodywt, resid)) +
geom_point()
#4. Do better! Make a more predictive model using logs. Which model is best? logarithmic, exponential, power
sleep_1 <- msleep2 %>% mutate(log_body = log(bodywt),
log_brain = log(brainwt))
View(sleep_1)
coef(exp_mod)
exp_mod <- lm(log_brain ~ bodywt, data = sleep_1)
grid <- grid %>% add_predictions(exp_mod)
exp_mod <- lm(log_body ~ brainwt, data = sleep_1)
grid <- grid %>% add_predictions(exp_mod)
exp_mod <- lm(log_brain ~ brainwt, data = sleep_1)
grid <- grid %>% add_predictions(exp_mod)
exp_mod <- lm(log_brain ~ bodywt, data = sleep_1)
ggplot(sleep_1, aes(bodywt)) +
geom_point(aes(y = log_brain)) +
geom_line(aes(y = pred), data = grid, color = "green", size = 1)
exp_mod <- lm(log_weight ~ length_inches, data = gator_1)
coef(exp_mod)
grid <- grid %>% add_predictions(exp_mod)
exp_mod <- lm(log_brain ~ bodywt, data = sleep_1)
coef(exp_mod)
grid <- grid %>% add_predictions(exp_mod)#not working
grid <- grid %>% add_predictions(exp_mod)#not working
exp_mod <- lm(log_weight ~ length_inches, data = gator_1)
coef(exp_mod)
grid <- grid %>% add_predictions(exp_mod)
ggplot(gator_1, aes(length_inches)) +
geom_point(aes(y = log_weight)) +
geom_line(aes(y = pred), data = grid, color = "green", size = 1)
sleep_1 <- msleep2 %>% mutate(log_body = log(bodywt),
log_brain = log(brainwt))
exp_mod <- lm(log_brain ~ bodywt, data = sleep_1)
coef(exp_mod)
grid <- grid %>% add_predictions(exp_mod)#not working
grid <- grid %>%
data_grid(length_inches) %>%
add_predictions(exp_mod)#not working
#add explintaory varibles
grid <- grid %>%
data_grid(length_inches)# %>%
#add explintaory varibles
grid <- grid %>%
data_grid(length_inches) %>%
add_predictions(exp_mod)#not working
#add explintaory varibles
grid <- grid %>%
data_grid(bodywt) %>%
add_predictions(exp_mod)#not working
grid <- grid %>% add_predictions(exp_mod)#not working
#add explintaory varibles
grid <- grid %>% data_grid(bodywt)
#add explintaory varibles
grid <- msleep2 %>%
data_grid(bodywt) %>%
add_predictions(exp_mod)#not working
ggplot(sleep_1, aes(bodywt)) +
geom_point(aes(y = log_brain)) +
geom_line(aes(y = pred), data = grid, color = "green", size = 1)
sleep_1 <- sleep_1 %>% add_residuals(exp_mod)
ggplot(data = sleep_1, aes(bodywt, resid)) +
geom_point()
msleep2 <- msleep %>%
filter(bodywt > 2000)
#1. Scatterplot of brainweight vs. bodyweight (show scatterplot)
ggplot(msleep2, aes(brainwt, bodywt))+
geom_point()
msleep2 <- msleep %>%
filter(bodywt < 2000)
#1. Scatterplot of brainweight vs. bodyweight (show scatterplot)
ggplot(msleep2, aes(brainwt, bodywt))+
geom_point()
#2. Linear model with coefficients interpreted
sleep_mod <- lm(brainwt ~ bodywt, data = msleep2)
grid <- msleep2 %>%
data_grid(bodywt) %>%
add_predictions(sleep_mod)
ggplot(msleep2, aes(x = bodywt))+
geom_point(aes(y = brainwt))+
geom_line(aes(y = pred), data = grid, color = "green", size = 1)
#3. Residual plot of linear model (show residual plot)
msleep2 <- msleep2 %>% add_residuals(sleep_mod)
#3. Residual plot of linear model (show residual plot)
msleep2 <- msleep2 %>% add_residuals(sleep_mod)
ggplot(data = msleep2, aes(bodywt, resid)) +
geom_point()
#4. Do better! Make a more predictive model using logs. Which model is best? logarithmic, exponential, power
#======= exponental =================
sleep_1 <- msleep2 %>% mutate(log_body = log(bodywt),
log_brain = log(brainwt))
coef(exp_mod)
#add explintaory varibles
grid <- msleep2 %>%
data_grid(bodywt) %>%
add_predictions(exp_mod)#not working
ggplot(sleep_1, aes(bodywt)) +
geom_point(aes(y = log_brain)) +
geom_line(aes(y = pred), data = grid, color = "green", size = 1)
ggplot(data = sleep_1, aes(bodywt, resid)) +
geom_point()
exp_mod
coef(exp_mod)
library(tidyverse)
library(modelr)
ggplot(sim2) +
geom_point(aes(x,y))
sim2_mod <- lm(y~x, data = sim2)
sim2_mod <- lm(y~x, data = sim2)
#grad the explanitory
grid <- sim2 %>%
data_grid(x)
#add the perdiecitonls
grid <- grid %>%
add_predictions(sim2_mod)
#grad the explanitory
grid <- sim2 %>%
data_grid(x)
View(grid)
#add the perdiecitonls
grid <- grid %>%
add_predictions(sim2_mod)
View(grid)
ggplot(grid, aes(x,pred)) +
geom_point()
ggplot(sim2, aes(x))+
geom_point(aes(y=y)) +
geom_point(data = grid,
aes(y=pred), color = "green", size = 5)
ggplot(sim2, aes(x)) +
geom_point(aes(y = y)) +
geom_point(data = grid,
aes(y = pred), color = "blue", size = 5)
ggplot(sim3, aes(x1, y)) +
geom_point(aes(color = x2))
ggplot(sim3, aes(x1, y)) +
geom_point(aes(color = x2))
m1 <- lm(y~x1+x2, data =. sim3)
m1 <- lm(y~x1+x2, data = sim3)
m1
m2 <- lm(y~x1*x2, data = sim3)
#visualing the models
#* data frid notehr bvirbales
#* gather perdicitons()
grid <- sim3 %>% data_grid(x1,x2) %>%
gather_perdictions(m1,m2)
#visualing the models
#* data frid notehr bvirbales
#* gather perdicitons()
grid <- sim3 %>% data_grid(x1,x2) %>%
gather_predictions(m1,m2)
view(grid)
ggplot(sim3, aes(x1, y, color = x2)) +
geom_point() +
geom_line(data = grid, aes(y = pred)) +
facet_wrap(~model)
ggplot(sim3, aes(x1, resid, color = x2)) +
geom_point() +
facet_grid(model ~ x2)
#make the residuals
sim3 <- sim3 %>%
gather_residuals(m1,m2)
ggplot(sim3, aes(x1, resid, color = x2)) +
geom_point() +
facet_grid(model ~ x2)
#visualing the models
#* data frid notehr bvirbales
#* gather perdicitons()
grid <- sim3 %>% data_grid(x1,x2) %>%
gather_predictions(m1,m2)
ggplot(sim3, aes(x1, y, color = x2)) +
geom_point() +
geom_line(data = grid, aes(y = pred)) +
facet_wrap(~model)
ggplot(sim3, aes(x1, resid, color = x2)) +
geom_point() +
facet_grid(model ~ x2)
#plot the beueefull data
ggplot(sim2, aes(x)) +
geom_point(aes(y = y)) +
geom_point(data = grid,
aes(y = pred), color = "blue", size = 5)
#add the perdiecitonls
grid <- grid %>%
add_predictions(sim2_mod)
#add the perdiecitonls
grid <- grid %>%
add_predictions(sim2_mod)
ggplot(sim2) +
geom_point(aes(x,y))
sim2_mod <- lm(y~x, data = sim2)
#grad the explanitory
grid <- sim2 %>%
data_grid(x)
#add the perdiecitonls
grid <- grid %>%
add_predictions(sim2_mod)
#plot the beueefull data
ggplot(sim2, aes(x)) +
geom_point(aes(y = y)) +
geom_point(data = grid,
aes(y = pred), color = "blue", size = 5)
#c adiucorical and continiues
sim3
ggplot(sim3, aes(x1, y)) +
geom_point(aes(color = x2))
m1 <- lm(y~x1+x2, data = sim3)
m2 <- lm(y~x1*x2, data = sim3)
#visualing the models
#* data frid notehr bvirbales
#* gather perdicitons()
grid <- sim3 %>% data_grid(x1,x2) %>%
gather_predictions(m1,m2)
ggplot(sim3, aes(x1, y, color = x2)) +
geom_point() +
geom_line(data = grid, aes(y = pred)) +
facet_wrap(~model)
#make the residuals
sim3 <- sim3 %>%
gather_residuals(m1,m2)
ggplot(sim3, aes(x1, resid, color = x2)) +
geom_point() +
facet_grid(model ~ x2)
